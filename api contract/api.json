{
    "openapi": "3.0.3",
    "info": {
        "title": "Employe Self Service",
        "version": "1",
        "description": "This is an API documentation ESS Celerates 2022 based on the OpenAPI 3.0.3 specification.  You can find out more about Swagger at [https://swagger.io](https://swagger.io). In the third iteration of the pet store, we've switched to the design first approach! You can now help us improve the API whether it's by making changes to the definition itself or to the code. That way, with time, we can improve the API in general, and expose some of the new features in OAS3.",
        "termsOfService": "https://www.celerates.com/",
        "contact": {
            "name": "Celerates",
            "email": "contact@celerates.com",
            "url": "https://www.celerates.com/"
        }
    },
    "paths": {
        "/register": {
            "get": {
                "security": [
                    {}
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Get Page Register",
                "description": "Get Page Register for Employee",
                "responses": {
                    "200": {
                        "description": "Success Render Page Register",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "success": {
                                        "description": "Success render page register",
                                        "value": {
                                            "status": "ok",
                                            "code": "200"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Create New Account Employee",
                "description": "Create new Account Employee to database. this end point containt two component : Register Component and Primary Data Component",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Register"
                            },
                            "examples": {
                                "register_user": {
                                    "description": "Example Register Account Employee",
                                    "value": {
                                        "nama_lengkap": "Kresna",
                                        "email": "kresna@celerates.com",
                                        "password": "kresnaCelerates911",
                                        "tempat_lahir": "Bandung",
                                        "tanggal_lahir": "17-08-1945",
                                        "nik": "978234235",
                                        "alamat_ktp": "Bandung Raya, Jl. Ujang Kasep, RT.01/RW.01",
                                        "pendidikan_terakhir": "Sarjana",
                                        "nama_pendidikan_terakhir": "Universitas Pasuruan",
                                        "jurusan_pendidikan_terakhir": "Oceano Gravy",
                                        "alamat_email_aktif": "DrK@gmail.com",
                                        "no_tlp_aktif": "08001001001",
                                        "kontak_darurat": "080010010911",
                                        "status_employee": "aktif",
                                        "photo_employee": "https://ess.com/images/assert/akdfg08923145asdf.jpg"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success Create Account Employee",
                        "content": {
                            "applicaton/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseRegister"
                                },
                                "examples": {
                                    "success": {
                                        "description": "Success Create Account Employee",
                                        "value": {
                                            "code": 201,
                                            "status": "ok",
                                            "message": "Your Account have been created"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Failed Create Account Employee",
                        "content": {
                            "applicaton/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseRegister"
                                },
                                "examples": {
                                    "failed_401": {
                                        "description": "Failed Create Account Employee",
                                        "value": {
                                            "code": 401,
                                            "status": "error",
                                            "message": "Your Account failed to create"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed Create Account Employee",
                        "content": {
                            "applicaton/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseRegister"
                                },
                                "examples": {
                                    "failed_500": {
                                        "description": "Failed Create Account Employee Because Internal Server Error",
                                        "value": {
                                            "code": 501,
                                            "status": "error",
                                            "message": "Sorry, Internal Server Error"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/login": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "View Login",
                "description": "Render Page Login",
                "responses": {
                    "200": {
                        "description": "Success Render",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "success": {
                                        "description": "Success Render Page Login",
                                        "value": [
                                            {
                                                "status": "ok",
                                                "code": "200"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "EssAuth": []
                    }
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Create new Products",
                "description": "Create new product to database",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateOrUpdateProduct"
                            },
                            "examples": {
                                "Golang": {
                                    "description": "Example create product Golang",
                                    "value": {
                                        "name_product": "Mie Goreng",
                                        "category": 3,
                                        "price": 5000,
                                        "stock": 12,
                                        "description_product": "mie goreng indomie product"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success create product",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/arrayGetProducts"
                                },
                                "examples": {
                                    "java": {
                                        "description": "Success create product with golang",
                                        "value": [
                                            {
                                                "code": "200",
                                                "status": "ok",
                                                "message": "success create product"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/products/{productId}": {
            "get": {
                "security": [
                    {
                        "EssAuth": []
                    }
                ],
                "tags": [
                    "Products"
                ],
                "summary": "get product by id",
                "description": "Get data product in database by id",
                "responses": {
                    "200": {
                        "description": "Success get product",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        }
                                    }
                                },
                                "examples": {
                                    "success": {
                                        "description": "Example success get products by id",
                                        "value": {
                                            "product_id": "1",
                                            "name": "mie goreng",
                                            "category": "makanan",
                                            "price": 2000,
                                            "stock": 30,
                                            "description_product": "ini contoh deskripsi produk"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Failed get product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        }
                                    }
                                },
                                "examples": {
                                    "failed": {
                                        "description": "Failed get product by id",
                                        "value": {
                                            "success": false,
                                            "message": "product not found"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/productId"
                    }
                ]
            },
            "delete": {
                "security": [
                    {
                        "EssAuth": []
                    }
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Delete existing product",
                "description": "Delete existing product in database",
                "responses": {
                    "200": {
                        "description": "Success delete product",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        }
                                    }
                                },
                                "examples": {
                                    "success": {
                                        "description": "Success delete product",
                                        "value": {
                                            "success": true,
                                            "message": "success delete product"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Failed delete not found product",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        }
                                    }
                                },
                                "examples": {
                                    "failed": {
                                        "description": "Failed delete product",
                                        "value": {
                                            "success": false,
                                            "message": "delete product not found"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/productId"
                    }
                ]
            },
            "put": {
                "security": [
                    {
                        "EssAuth": []
                    }
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Update existing product",
                "description": "Update existing product in databse",
                "responses": {
                    "200": {
                        "description": "Success Update product",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/arrayGetProducts"
                                },
                                "examples": {
                                    "Golang": {
                                        "description": "Success update product with golang",
                                        "value": {
                                            "code": 200,
                                            "status": "k",
                                            "message": "success update product"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/components/parameters/productId"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateOrUpdateProduct"
                            },
                            "examples": {
                                "Golang": {
                                    "description": "Example update product with golang",
                                    "value": {
                                        "name": "mie goreng",
                                        "category": "makanan",
                                        "price": 2000,
                                        "stock": 30,
                                        "description_product": "ini contoh deskripsi produk"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "EssAuth": {
                "type": "apiKey",
                "in": "header",
                "name": "Authorization",
                "description": "Authentication for ESS Project App"
            }
        },
        "parameters": {
            "productId": {
                "name": "productId",
                "in": "path",
                "required": true,
                "description": "productId id for getById, update and delete",
                "schema": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                },
                "examples": {
                    "golang": {
                        "description": "Sample mini project parameter for Golang",
                        "value": 1
                    }
                }
            }
        },
        "schemas": {
            "Register": {
                "type": "object",
                "properties": {
                    "nama_lengkap": {
                        "type": "string",
                        "required": [
                            "true"
                        ],
                        "description": "nama karyawan",
                        "example": "Kresna"
                    },
                    "email": {
                        "type": "string",
                        "required": [
                            "true"
                        ],
                        "description": "email karyawan",
                        "example": "kresna@celerates.com",
                        "pattern": "@celerates.com"
                    },
                    "password": {
                        "type": "string",
                        "required": [
                            "true"
                        ],
                        "description": "Password for account",
                        "example": "kresnaCelerates911"
                    },
                    "tempat_lahir": {
                        "type": "string",
                        "required": [
                            "true"
                        ],
                        "description": "Kota Tempat Lahir",
                        "example": "Bandung"
                    },
                    "tanggal_lahir": {
                        "type": "string",
                        "format": "date",
                        "required": [
                            "true"
                        ],
                        "pattern": "dd-mm-yyyy",
                        "description": "tanggal lahir karyawan",
                        "example": "17-08-1945"
                    },
                    "nik": {
                        "type": "string",
                        "required": [
                            "true"
                        ],
                        "description": "NIK karyawan",
                        "example": "978234235",
                        "minLength": 16,
                        "maxLength": 16
                    },
                    "alamat_ktp": {
                        "type": "string",
                        "required": [
                            "true"
                        ],
                        "format": "TEXT",
                        "description": "alamat ktp karyawan",
                        "example": "Bandung Raya, Jl. Ujang Kasep, RT.01/RW.01"
                    },
                    "pendidikan_terakhir": {
                        "type": "string",
                        "required": [
                            "true"
                        ],
                        "description": "Pendidikan Terakhir Karyawan",
                        "example": "Sarjana"
                    },
                    "nama_pendidikan_terakhir": {
                        "type": "string",
                        "required": [
                            "true"
                        ],
                        "description": "Nama Tempat Pendidikan Terakhir Karyawan",
                        "example": "Universitas Pasuruan"
                    },
                    "jurusan_pendidikan_terakhir": {
                        "type": "string",
                        "required": [
                            "true"
                        ],
                        "description": "Jurusan Pendidikan",
                        "example": "Oceano Gravy"
                    },
                    "alamat_email_aktif": {
                        "type": "string",
                        "required": [
                            "true"
                        ],
                        "description": "Alamat Email Karyawan Non Celerates Aktif",
                        "example": "DrK@gmail.com"
                    },
                    "no_tlp_aktif": {
                        "type": "string",
                        "required": [
                            "true"
                        ],
                        "description": "No Telepon Aktif Karyawan",
                        "example": "08001001001"
                    },
                    "kontak_darurat": {
                        "type": "string",
                        "required": [
                            "true"
                        ],
                        "description": "Kontak Darurat Yang Bisa Dihubungi",
                        "example": "080010010911"
                    },
                    "status_employee": {
                        "type": "string",
                        "required": [
                            "true"
                        ],
                        "description": "Status bekerja karyawan",
                        "example": "aktif"
                    },
                    "photo_employee": {
                        "type": "string",
                        "required": [
                            "true"
                        ],
                        "description": "alamat url photo karyawan",
                        "example": "https://ess.com/images/assert/akdfg08923145asdf.jpg"
                    }
                }
            },
            "ResponseRegister": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer"
                    },
                    "status": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            },
            "Products": {
                "type": "object",
                "properties": {
                    "product_id": {
                        "type": "string"
                    },
                    "product_name": {
                        "type": "string"
                    },
                    "category": {
                        "type": "string"
                    },
                    "price": {
                        "type": "number",
                        "format": "int32"
                    },
                    "stock": {
                        "type": "number",
                        "format": "int32"
                    },
                    "description_product": {
                        "type": "string"
                    }
                }
            },
            "CreateOrUpdateProduct": {
                "type": "object",
                "properties": {
                    "product_name": {
                        "type": "string",
                        "minLength": 1,
                        "required": [
                            "true"
                        ]
                    },
                    "category": {
                        "type": "integer",
                        "format": "int32",
                        "required": [
                            "true"
                        ]
                    },
                    "price": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "stock": {
                        "type": "number",
                        "format": "int32",
                        "default": 0
                    },
                    "description_product": {
                        "type": "string"
                    }
                }
            },
            "arrayGetProducts": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Products"
                }
            }
        }
    }
}